{"version":3,"sources":["functions/index.js","reducers/changeGameModeReducer.js","reducers/index.js","actions/types.js","components/Header.jsx","components/Stripe.jsx","components/SquareDisplay.jsx","components/Squares.jsx","components/App.jsx","actions/index.js","index.js"],"names":["randomColor","r","Math","ceil","random","g","b","concat","getRandomColors","numSquares","rc","i","Object","toConsumableArray","pickWinningColor","changeColorsWin","winColor","wc","modeButtonId","mode","numSquare","INITIAL_STATE","numS","pickedColor","colors","resetButton","message","pickedColorText","headerColor","combineReducers","game","state","arguments","length","undefined","action","type","objectSpread","payload","Header","_ref","props","divStyle","backgroundColor","displayText","react_default","a","createElement","style","id","Stripe","_props$props","onClick","newGame","changeMode","value","className","SquareDisplay","children","Squares","square","squareChoice","App","onModeSelect","e","changeGameMode","_this","colorgame","document","querySelectorAll","classList","remove","target","add","renderList","map","bgColor","components_Squares","key","onSquareClick","_this$props","winGame","updateMessage","_this$props$colorgame","onResetButtonClick","components_Header","this","components_Stripe","components_SquareDisplay","Component","connect","newMode","newNumS","newPickedColor","newColors","winColors","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_components_App","querySelector"],"mappings":"kOAKMA,EAAc,WACnB,IAAIC,EAAIC,KAAKC,KAAqB,IAAhBD,KAAKE,UACnBC,EAAIH,KAAKC,KAAqB,IAAhBD,KAAKE,UACnBE,EAAIJ,KAAKC,KAAqB,IAAhBD,KAAKE,UACvB,aAAAG,OAAcN,EAAd,MAAAM,OAAoBF,EAApB,MAAAE,OAA0BD,EAA1B,MAGYE,EAAkB,SAACC,GAE/B,IADA,IAAIC,EAAK,GACAC,EAAI,EAAGA,EAAIF,EAAYE,IAC/BD,EAAE,GAAAH,OAAAK,OAAAC,EAAA,EAAAD,CAAQF,GAAR,CAAYV,MAEf,OAAOU,GAGKI,EAAmB,SAACL,GAChC,OAAOP,KAAKC,KAAKD,KAAKE,SAAWK,EAAa,IAGlCM,EAAkB,SAACN,EAAYO,GAE3C,IADA,IAAIC,EAAK,GACAN,EAAI,EAAGA,EAAIF,EAAYE,IAC/BM,EAAE,GAAAV,OAAAK,OAAAC,EAAA,EAAAD,CAAQK,GAAR,CAAYD,IAEf,OAAOC,GAGKC,EAAe,SAACC,GAC5B,MAjCmB,SAiCZA,EAAgB,EAhCJ,SAgCQA,EAAgB,EA/BtB,WA+B0BA,EAAkB,EAAI,GAGzDC,EAAY,SAACD,GACzB,MArCmB,SAqCZA,EAAgB,EApCJ,SAoCQA,EAAgB,EAnCtB,WAmC0BA,EAAkB,EAAI,IClChEE,EAAgB,CACrBF,KAAkB,OAClBG,KAAkB,EAClBC,YAAkBT,EAAiB,GACnCU,OAAkBhB,EAAgB,GAClCiB,YAAkB,aAClBC,QAAkB,GAClBC,gBAAkB,GAClBC,YAAkB,aCRJC,cAAgB,CAC9BC,KDUc,WAAmC,IAAlCC,EAAkCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1BX,EAAec,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAOC,MACd,IEhB8B,mBFiB7B,OAAOxB,OAAAyB,EAAA,EAAAzB,CAAA,GACHmB,EADJ,CAECZ,KAAkBgB,EAAOG,QAAQnB,KACjCG,KAAkBa,EAAOG,QAAQhB,KACjCC,YAAkBY,EAAOG,QAAQf,YACjCC,OAAkBW,EAAOG,QAAQd,OACjCC,YAAkB,aAClBC,QAAkB,GAClBC,gBAAkBQ,EAAOG,QAAQX,gBACjCC,YAAkB,cAEpB,IE3BsB,WF4BrB,OAAOhB,OAAAyB,EAAA,EAAAzB,CAAA,GACHmB,EADJ,CAECR,YAAkBY,EAAOG,QAAQf,YACjCC,OAAkBW,EAAOG,QAAQd,OACjCC,YAAkB,aAClBC,QAAkB,GAClBC,gBAAkBQ,EAAOG,QAAQX,gBACjCC,YAAkB,cAEpB,IEpCsB,WFqCrB,OAAOhB,OAAAyB,EAAA,EAAAzB,CAAA,GACHmB,EADJ,CAECP,OAAcW,EAAOG,QAAQd,OAC7BC,YAAc,cACdC,QAAc,SACdE,YAAcO,EAAOG,QAAQV,cAG/B,IE3C4B,iBF4C3B,OAAOhB,OAAAyB,EAAA,EAAAzB,CAAA,GAAKmB,EAAZ,CAAmBL,QAASS,EAAOG,QAAQZ,UAC5C,QACC,OAAOK,8CG/BKQ,EAjBA,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACbC,EAAW,CAAEC,gBAAiBF,EAAMb,aACpCgB,EACHH,EAAMd,kBAAoBc,EAAMjB,OAAOiB,EAAMlB,aAC1CkB,EAAMd,gBACNc,EAAMjB,OAAOiB,EAAMlB,aACvB,OACCsB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,MAAIC,MAAON,GAAX,YACUG,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,QAAME,GAAG,gBAAgBL,GACzBC,EAAAC,EAAAC,cAAA,WAHD,UCgBYG,EAxBA,SAACT,GAAU,IAAAU,EACQV,EAAMA,MAA/BhB,EADiB0B,EACjB1B,YAAaC,EADIyB,EACJzB,QACrB,OACCmB,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UACPJ,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QAAQG,QAASX,EAAMY,SAChC5B,GAEFoB,EAAAC,EAAAC,cAAA,QAAME,GAAG,WAAWvB,GACpBmB,EAAAC,EAAAC,cAAA,UAAQK,QAASX,EAAMa,WAAYC,MAAM,OAAOC,UAAU,QAA1D,QAGAX,EAAAC,EAAAC,cAAA,UAAQK,QAASX,EAAMa,WAAYC,MAAM,OAAOC,UAAU,iBAA1D,QAGAX,EAAAC,EAAAC,cAAA,UAAQK,QAASX,EAAMa,WAAYC,MAAM,SAASC,UAAU,QAA5D,UAGAX,EAAAC,EAAAC,cAAA,UAAQK,QAASX,EAAMa,WAAYC,MAAM,SAASC,UAAU,QAA5D,YCbYC,EAJO,SAAChB,GACtB,OAAOI,EAAAC,EAAAC,cAAA,OAAKE,GAAG,aAAaR,EAAMiB,aCIpBC,EALC,SAAClB,GAChB,IAAIC,EAAW,CAAEC,gBAAiBF,EAAMmB,QACxC,OAAOf,EAAAC,EAAAC,cAAA,OAAKK,QAASX,EAAMoB,aAAcL,UAAU,SAASR,MAAON,KCO9DoB,oNACLC,aAAe,SAACC,GAAM,IACbC,EAAmBC,EAAKzB,MAAxBwB,eACA9C,EAAS+C,EAAKzB,MAAM0B,UAApBhD,KACUiD,SAASC,iBAAiB,SAChCnD,EAAaC,IAAOmD,UAAUC,OAAO,YACjDP,EAAEQ,OAAOF,UAAUG,IAAI,YACvBR,EACCD,EAAEQ,OAAOjB,MACTnC,EAAU4C,EAAEQ,OAAOjB,OACnBzC,EAAiBM,EAAU4C,EAAEQ,OAAOjB,QACpC/C,EAAgBY,EAAU4C,EAAEQ,OAAOjB,YAIrCmB,WAAa,WAAM,IACVlD,EAAW0C,EAAKzB,MAAM0B,UAAtB3C,OACJb,GAAK,EACT,MAAkB,cAAda,EAAO,GACgBA,EAAOmD,IAAI,SAACC,GAErC,OADAjE,IACOkC,EAAAC,EAAAC,cAAC8B,EAAD,CAASjB,OAAQgB,EAASE,IAAKnE,EAAG4C,MAAOqB,EAASf,aAAcK,EAAKa,kBAItE,QAGTA,cAAgB,SAACf,GAAM,IAAAgB,EACad,EAAKzB,MAAhCwC,EADcD,EACdC,QAASC,EADKF,EACLE,cADKC,EAEgBjB,EAAKzB,MAAM0B,UAAzC3C,EAFc2D,EAEd3D,OAAQF,EAFM6D,EAEN7D,KAAMC,EAFA4D,EAEA5D,YAClByC,EAAEQ,OAAOxB,MAAML,kBAAoBnB,EAAOD,GAC7C0D,EAAQlE,EAAgBO,EAAME,EAAOD,MAErC2D,EAAc,aACdlB,EAAEQ,OAAOxB,MAAML,gBAAkB,cAInCyC,mBAAqB,WAAM,IAClB/B,EAAYa,EAAKzB,MAAjBY,QACA/B,EAAS4C,EAAKzB,MAAM0B,UAApB7C,KACR+B,EAAQvC,EAAiBQ,GAAOd,EAAgBc,6EAIhD,OACCuB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACsC,EAAD,CAAQ5C,MAAO6C,KAAK7C,MAAM0B,YAC1BtB,EAAAC,EAAAC,cAACwC,EAAD,CAAQjC,WAAYgC,KAAKvB,aAAcV,QAASiC,KAAKF,mBAAoB3C,MAAO6C,KAAK7C,MAAM0B,YAC3FtB,EAAAC,EAAAC,cAACyC,EAAD,CAAe9B,SAAU4B,KAAKZ,qBAlDhBe,cA8DHC,cANU,SAAC3D,GACzB,MAAO,CACNoC,UAAYpC,EAAMD,OAIqB,CAAEoD,cCrCd,SAACxD,GAC7B,MAAO,CACNU,KNlC4B,iBMmC5BE,QAAU,CACTZ,QAAUA,KDiC6CuC,eCvE5B,SAAC0B,EAASC,EAASC,EAAgBC,GAChE,MAAO,CACN1D,KNJ8B,mBMK9BE,QAAU,CACTnB,KAAkBwE,EAClBrE,KAAkBsE,EAClBrE,YAAkBsE,EAClBrE,OAAkBsE,EAClBnE,gBAAkBmE,EAAUD,MD+D2CxC,QC1DnD,SAACwC,EAAgBC,GACvC,MAAO,CACN1D,KNhBsB,WMiBtBE,QAAU,CACTf,YAAkBsE,EAClBrE,OAAkBsE,EAClBnE,gBAAkBmE,EAAUD,MDoDoDZ,QC/C5D,SAACc,GACvB,MAAO,CACN3D,KN1BsB,WM2BtBE,QAAU,CACTd,OAAcuE,EACdnE,YAAcmE,EAAU,OD0CZL,CAA+E5B,GEhExFkC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YAAYC,EAAUN,EAAiBO,YAAgBC,OAErEC,IAASC,OACR7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAUP,MAAOA,GAChBvD,EAAAC,EAAAC,cAAC6D,EAAD,OAEDxC,SAASyC,cAAc","file":"static/js/main.c33ceb89.chunk.js","sourcesContent":["export const Easy = 'Easy';\r\nexport const Hard = 'Hard';\r\nexport const Expert = 'Expert';\r\nexport const Master = 'Master';\r\n\r\nconst randomColor = () => {\r\n\tlet r = Math.ceil(Math.random() * 256);\r\n\tlet g = Math.ceil(Math.random() * 256);\r\n\tlet b = Math.ceil(Math.random() * 256);\r\n\treturn `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\nexport const getRandomColors = (numSquares) => {\r\n\tlet rc = [];\r\n\tfor (let i = 0; i < numSquares; i++) {\r\n\t\trc = [ ...rc, randomColor() ];\r\n\t}\r\n\treturn rc;\r\n};\r\n\r\nexport const pickWinningColor = (numSquares) => {\r\n\treturn Math.ceil(Math.random() * numSquares - 1);\r\n};\r\n\r\nexport const changeColorsWin = (numSquares, winColor) => {\r\n\tlet wc = [];\r\n\tfor (let i = 0; i < numSquares; i++) {\r\n\t\twc = [ ...wc, winColor ];\r\n\t}\r\n\treturn wc;\r\n};\r\n\r\nexport const modeButtonId = (mode) => {\r\n\treturn mode === Easy ? 0 : mode === Hard ? 1 : mode === Expert ? 2 : 3;\r\n};\r\n\r\nexport const numSquare = (mode) => {\r\n\treturn mode === Easy ? 3 : mode === Hard ? 6 : mode === Expert ? 9 : 12;\r\n};\r\n","import { CHANGE_GAME_MODE, NEW_GAME, WIN_GAME, UPDATE_MESSAGE } from '../actions/types';\r\nimport { getRandomColors, pickWinningColor } from '../functions';\r\n\r\nconst INITIAL_STATE = {\r\n\tmode            : 'Hard',\r\n\tnumS            : 6,\r\n\tpickedColor     : pickWinningColor(6),\r\n\tcolors          : getRandomColors(6),\r\n\tresetButton     : 'New Colors',\r\n\tmessage         : '',\r\n\tpickedColorText : '',\r\n\theaderColor     : 'steelblue',\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_GAME_MODE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmode            : action.payload.mode,\r\n\t\t\t\tnumS            : action.payload.numS,\r\n\t\t\t\tpickedColor     : action.payload.pickedColor,\r\n\t\t\t\tcolors          : action.payload.colors,\r\n\t\t\t\tresetButton     : 'New Colors',\r\n\t\t\t\tmessage         : '',\r\n\t\t\t\tpickedColorText : action.payload.pickedColorText,\r\n\t\t\t\theaderColor     : 'steelblue',\r\n\t\t\t};\r\n\t\tcase NEW_GAME:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpickedColor     : action.payload.pickedColor,\r\n\t\t\t\tcolors          : action.payload.colors,\r\n\t\t\t\tresetButton     : 'New Colors',\r\n\t\t\t\tmessage         : '',\r\n\t\t\t\tpickedColorText : action.payload.pickedColorText,\r\n\t\t\t\theaderColor     : 'steelblue',\r\n\t\t\t};\r\n\t\tcase WIN_GAME:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolors      : action.payload.colors,\r\n\t\t\t\tresetButton : 'Play Again?',\r\n\t\t\t\tmessage     : 'Winner',\r\n\t\t\t\theaderColor : action.payload.headerColor,\r\n\t\t\t};\r\n\r\n\t\tcase UPDATE_MESSAGE:\r\n\t\t\treturn { ...state, message: action.payload.message };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport changeGameModeReducer from './changeGameModeReducer';\r\n\r\nexport default combineReducers({\r\n\tgame : changeGameModeReducer,\r\n});\r\n","export const CHANGE_GAME_MODE = 'CHANGE_GAME_MODE';\r\nexport const NEW_GAME = 'NEW_GAME';\r\nexport const WIN_GAME = 'WIN_GAME';\r\nexport const RESET_GAME = 'RESET_GAME';\r\nexport const UPDATE_MESSAGE = 'UPDATE_MESSAGE';\r\n","import React from 'react';\r\n\r\nconst Header = ({ props }) => {\r\n\tlet divStyle = { backgroundColor: props.headerColor };\r\n\tlet displayText =\r\n\t\tprops.pickedColorText === props.colors[props.pickedColor]\r\n\t\t\t? props.pickedColorText\r\n\t\t\t: props.colors[props.pickedColor];\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 style={divStyle}>\r\n\t\t\t\tThe Great<br />\r\n\t\t\t\t<span id='colorDisplay'>{displayText}</span>\r\n\t\t\t\t<br />Game\r\n\t\t\t</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Stripe = (props) => {\r\n\tconst { resetButton, message } = props.props;\r\n\treturn (\r\n\t\t<div id='stripe'>\r\n\t\t\t<button id='reset' onClick={props.newGame}>\r\n\t\t\t\t{resetButton}\r\n\t\t\t</button>\r\n\t\t\t<span id='message'>{message}</span>\r\n\t\t\t<button onClick={props.changeMode} value='Easy' className='mode'>\r\n\t\t\t\tEasy\r\n\t\t\t</button>\r\n\t\t\t<button onClick={props.changeMode} value='Hard' className='mode selected'>\r\n\t\t\t\tHard\r\n\t\t\t</button>\r\n\t\t\t<button onClick={props.changeMode} value='Expert' className='mode'>\r\n\t\t\t\tExpert\r\n\t\t\t</button>\r\n\t\t\t<button onClick={props.changeMode} value='Master' className='mode'>\r\n\t\t\t\tMaster\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Stripe;\r\n","import React from 'react';\r\n\r\nconst SquareDisplay = (props) => {\r\n\treturn <div id='container'>{props.children()}</div>;\r\n};\r\n\r\nexport default SquareDisplay;\r\n","import React from 'react';\r\n\r\nconst Squares = (props) => {\r\n\tlet divStyle = { backgroundColor: props.square };\r\n\treturn <div onClick={props.squareChoice} className='square' style={divStyle} />;\r\n};\r\n\r\nexport default Squares;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeGameMode, newGame, winGame, updateMessage } from '../actions';\r\nimport { getRandomColors, pickWinningColor, changeColorsWin, modeButtonId, numSquare } from '../functions';\r\nimport Header from './Header';\r\nimport Stripe from './Stripe';\r\nimport SquareDisplay from './SquareDisplay';\r\nimport Squares from './Squares';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tonModeSelect = (e) => {\r\n\t\tconst { changeGameMode } = this.props;\r\n\t\tconst { mode } = this.props.colorgame;\r\n\t\tlet modeButtons = document.querySelectorAll('.mode');\r\n\t\tmodeButtons[modeButtonId(mode)].classList.remove('selected');\r\n\t\te.target.classList.add('selected');\r\n\t\tchangeGameMode(\r\n\t\t\te.target.value,\r\n\t\t\tnumSquare(e.target.value),\r\n\t\t\tpickWinningColor(numSquare(e.target.value)),\r\n\t\t\tgetRandomColors(numSquare(e.target.value)),\r\n\t\t);\r\n\t};\r\n\r\n\trenderList = () => {\r\n\t\tconst { colors } = this.props.colorgame;\r\n\t\tlet i = -1;\r\n\t\tif (colors[0] !== 'undefined') {\r\n\t\t\tconst randomSquareColor = colors.map((bgColor) => {\r\n\t\t\t\ti++;\r\n\t\t\t\treturn <Squares square={bgColor} key={i} value={bgColor} squareChoice={this.onSquareClick} />;\r\n\t\t\t});\r\n\t\t\treturn randomSquareColor;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\tonSquareClick = (e) => {\r\n\t\tconst { winGame, updateMessage } = this.props;\r\n\t\tconst { colors, numS, pickedColor } = this.props.colorgame;\r\n\t\tif (e.target.style.backgroundColor === colors[pickedColor]) {\r\n\t\t\twinGame(changeColorsWin(numS, colors[pickedColor]));\r\n\t\t} else {\r\n\t\t\tupdateMessage('Try Again');\r\n\t\t\te.target.style.backgroundColor = '#232323';\r\n\t\t}\r\n\t};\r\n\r\n\tonResetButtonClick = () => {\r\n\t\tconst { newGame } = this.props;\r\n\t\tconst { numS } = this.props.colorgame;\r\n\t\tnewGame(pickWinningColor(numS), getRandomColors(numS));\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header props={this.props.colorgame} />\r\n\t\t\t\t<Stripe changeMode={this.onModeSelect} newGame={this.onResetButtonClick} props={this.props.colorgame} />\r\n\t\t\t\t<SquareDisplay children={this.renderList} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStatesToProps = (state) => {\r\n\treturn {\r\n\t\tcolorgame : state.game,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStatesToProps, { updateMessage, changeGameMode, newGame, winGame })(App);\r\n","import { CHANGE_GAME_MODE, NEW_GAME, WIN_GAME, UPDATE_MESSAGE } from './types';\r\n\r\nexport const changeGameMode = (newMode, newNumS, newPickedColor, newColors) => {\r\n\treturn {\r\n\t\ttype    : CHANGE_GAME_MODE,\r\n\t\tpayload : {\r\n\t\t\tmode            : newMode,\r\n\t\t\tnumS            : newNumS,\r\n\t\t\tpickedColor     : newPickedColor,\r\n\t\t\tcolors          : newColors,\r\n\t\t\tpickedColorText : newColors[newPickedColor],\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const newGame = (newPickedColor, newColors) => {\r\n\treturn {\r\n\t\ttype    : NEW_GAME,\r\n\t\tpayload : {\r\n\t\t\tpickedColor     : newPickedColor,\r\n\t\t\tcolors          : newColors,\r\n\t\t\tpickedColorText : newColors[newPickedColor],\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const winGame = (winColors) => {\r\n\treturn {\r\n\t\ttype    : WIN_GAME,\r\n\t\tpayload : {\r\n\t\t\tcolors      : winColors,\r\n\t\t\theaderColor : winColors[0],\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const updateMessage = (message) => {\r\n\treturn {\r\n\t\ttype    : UPDATE_MESSAGE,\r\n\t\tpayload : {\r\n\t\t\tmessage : message,\r\n\t\t},\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nimport App from './components/App';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}